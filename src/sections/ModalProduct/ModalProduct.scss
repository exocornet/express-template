// # ------------ LAYER SETTINGS and LAYER TOOLS------------ # //
@import "../../shared/styles/include-setings-styles";

.modal-product {
	$self: &;

	&__modal-body {
		border-radius: 16px 0 0 16px;
		background-color: $white;

		@include media(md) {
			height: 90%;

			border-radius: 16px 16px 0 0;

			@include no-scrollbar;
		}
	}

	&__container {
		@include media(lg, min) {
			padding-left: 0;
		}
	}

	&__wrap-close-button {
		position: sticky;
		z-index: 1;

		top: 20px;

		display: flex;
		justify-content: flex-end;

		height: 0;
		margin-right: 20px;

		@include media(md) {
			top: 13px;

			order: -1;

			width: 100%;
			margin-right: 0;
		}
	}

	&__close-button {
		position: static;
	}

	&__inner-row {
		@include media(md) {
			justify-content: space-between;
		}
	}

	&__inner-col {
		overflow: scroll;

		height: 100vh;

		padding-top: 40px;
		padding-bottom: 40px;

		@include no-scrollbar;

		@include media(md) {
			display: contents;
		}
	}

	&__modal-card {
		display: flex;
		flex-direction: column;

		row-gap: 8px;
	}

	&__card-product-heading {
		order: 1;

		@include media(md) {
			margin-top: 12px;
		}
	}

	&__description {
		display: flex;
		flex-direction: column;

		padding: 20px;

		border-radius: $br24;

		row-gap: 40px;

		background-color: $background-light;
	}

	&__card-price-tag {
		@include media(md) {
			position: absolute;
			z-index: 1;
			top: 20px;
		}
	}

	@include media(xs) {
		width: 100%;
		padding: 22px 12px 40px;
	}
}

$modal-product-main-col-media-params: (
	xs: (4, 2),
	md: 12,
	lg: 29,
	xl: 29,
	xxl: (29, 4),
);

@mixin modalProductMainColInsideCol {
	$breakpoints-name-list: map-keys($breakpoints);

	.modal-product__main-col {
		.col {
			@for $index from 1 through length($breakpoints) {
				$cols-count: nth(map-get($modal-product-main-col-media-params, nth($breakpoints-name-list, -$index)), 1);

				@if nth($breakpoints-name-list, -$index) == "xxl" {
					width: 100%;

					@if length(map-get($modal-product-main-col-media-params, nth($breakpoints-name-list, -$index))) == 2 {
						$cols-padding: nth(map-get($modal-product-main-col-media-params, nth($breakpoints-name-list, -$index)), 2);
						padding-inline: #{$cols-padding}px;
					}

					@for $col-num from 1 through $cols-count {
						&-#{$col-num} {
							flex: 0 0 calc(100% / #{$cols-count} * #{$col-num});

							max-width: calc(100% / #{$cols-count} * #{$col-num});
						}
					}
				}

				@else if nth($breakpoints-name-list, -$index) != "xxl" {
					@include media(nth($breakpoints-name-list, -$index)) {
						@if length(map-get($modal-product-main-col-media-params, nth($breakpoints-name-list, -$index))) == 2 {
							$cols-padding: nth(map-get($modal-product-main-col-media-params, nth($breakpoints-name-list, -$index)), 2);
							padding-inline: #{$cols-padding}px;
						}

						@for $col-num from 1 through $cols-count {
							&-#{$col-num}\@#{classMedia(nth($breakpoints-name-list, -$index))} {
								flex: 0 0 calc(100% / #{$cols-count} * #{$col-num});

								max-width: calc(100% / #{$cols-count} * #{$col-num});
							}
						}
					}
				}
			}
		}

		.offset {
			@for $index from 1 through length($breakpoints) {
				$cols-count: nth(map-get($modal-product-main-col-media-params, nth($breakpoints-name-list, -$index)), 1);

				@if nth($breakpoints-name-list, -$index) == "xxl" {
					@for $col-num from 0 through $cols-count - 1 {
						&-#{$col-num} {
							@if $col-num == 0 {
								margin-left: 0;
							}

							@else {
								margin-left: calc(100% / #{$cols-count} * #{$col-num});
							}
						}
					}
				}

				@else if nth($breakpoints-name-list, -$index) != "xxl" {
					@include media(nth($breakpoints-name-list, -$index)) {
						@for $col-num from 0 through $cols-count - 1 {
							&-#{$col-num}\@#{classMedia(nth($breakpoints-name-list, -$index))} {
								@if $col-num == 0 {
									margin-left: 0;
								}

								@else {
									margin-left: calc(100% / #{$cols-count} * #{$col-num});
								}
							}
						}
					}
				}
			}
		}
	}
}

@include modalProductMainColInsideCol;

$col-media-params-modal-product: (
	xs: (4, 2),
	md: 12,
	lg: 15,
	xl: 15,
	xxl: (15, 4),
);

@mixin modalProductColInsideCol {
	$breakpoints-name-list: map-keys($breakpoints);

	.modal-product__inner-col {
		position: relative;

		.col {
			@for $index from 1 through length($breakpoints) {
				$cols-count: nth(map-get($col-media-params-modal-product, nth($breakpoints-name-list, -$index)), 1);

				@if nth($breakpoints-name-list, -$index) == "xxl" {
					width: 100%;

					@if length(map-get($col-media-params-modal-product, nth($breakpoints-name-list, -$index))) == 2 {
						$cols-padding: nth(map-get($col-media-params-modal-product, nth($breakpoints-name-list, -$index)), 2);
						padding-inline: #{$cols-padding}px;
					}

					@for $col-num from 1 through $cols-count {
						&-#{$col-num} {
							flex: 0 0 calc(100% / #{$cols-count} * #{$col-num});

							max-width: calc(100% / #{$cols-count} * #{$col-num});
						}
					}
				}

				@else if nth($breakpoints-name-list, -$index) != "xxl" {
					@include media(nth($breakpoints-name-list, -$index)) {
						@if length(map-get($col-media-params-modal-product, nth($breakpoints-name-list, -$index))) == 2 {
							$cols-padding: nth(map-get($col-media-params-modal-product, nth($breakpoints-name-list, -$index)), 2);
							padding-inline: #{$cols-padding}px;
						}

						@for $col-num from 1 through $cols-count {
							&-#{$col-num}\@#{classMedia(nth($breakpoints-name-list, -$index))} {
								flex: 0 0 calc(100% / #{$cols-count} * #{$col-num});

								max-width: calc(100% / #{$cols-count} * #{$col-num});
							}
						}
					}
				}
			}
		}

		.offset {
			@for $index from 1 through length($breakpoints) {
				$cols-count: nth(map-get($col-media-params-modal-product, nth($breakpoints-name-list, -$index)), 1);

				@if nth($breakpoints-name-list, -$index) == "xxl" {
					@for $col-num from 0 through $cols-count - 1 {
						&-#{$col-num} {
							@if $col-num == 0 {
								margin-left: 0;
							}

							@else {
								margin-left: calc(100% / #{$cols-count} * #{$col-num});
							}
						}
					}
				}

				@else if nth($breakpoints-name-list, -$index) != "xxl" {
					@include media(nth($breakpoints-name-list, -$index)) {
						@for $col-num from 0 through $cols-count - 1 {
							&-#{$col-num}\@#{classMedia(nth($breakpoints-name-list, -$index))} {
								@if $col-num == 0 {
									margin-left: 0;
								}

								@else {
									margin-left: calc(100% / #{$cols-count} * #{$col-num});
								}
							}
						}
					}
				}
			}
		}
	}
}

@include modalProductColInsideCol;
